[32m[2020-12-14 19:39:31,096] [    INFO][0m - Found /root/.paddlenlp/models/bert-base-uncased/bert-base-uncased-vocab.txt[0m
W1214 19:39:35.327630  3800 device_context.cc:320] Please NOTE: device: 0, GPU Compute Capability: 7.0, Driver API Version: 11.0, Runtime API Version: 10.1
W1214 19:39:35.333808  3800 device_context.cc:330] device: 0, cuDNN Version: 7.6.
/usr/local/lib/python3.7/dist-packages/paddle/fluid/layers/math_op_patch.py:298: UserWarning: /workspace/models/PaddleNLP/paddlenlp/transformers/bert/modeling.py:58
The behavior of expression A - B has been unified with elementwise_sub(X, Y, axis=-1) from Paddle 2.0. If your code works well in the older versions but crashes in this version, try to use elementwise_sub(X, Y, axis=0) instead of A - B. This transitional warning will be dropped in the future.
  op_type, op_type, EXPRESSION_MAP[method_name]))
/usr/local/lib/python3.7/dist-packages/paddle/fluid/layers/math_op_patch.py:298: UserWarning: /workspace/models/PaddleNLP/paddlenlp/transformers/bert/modeling.py:67
The behavior of expression A + B has been unified with elementwise_add(X, Y, axis=-1) from Paddle 2.0. If your code works well in the older versions but crashes in this version, try to use elementwise_add(X, Y, axis=0) instead of A + B. This transitional warning will be dropped in the future.
  op_type, op_type, EXPRESSION_MAP[method_name]))
/usr/local/lib/python3.7/dist-packages/paddle/fluid/layers/math_op_patch.py:298: UserWarning: /usr/local/lib/python3.7/dist-packages/paddle/nn/layer/transformer.py:378
The behavior of expression A + B has been unified with elementwise_add(X, Y, axis=-1) from Paddle 2.0. If your code works well in the older versions but crashes in this version, try to use elementwise_add(X, Y, axis=0) instead of A + B. This transitional warning will be dropped in the future.
  op_type, op_type, EXPRESSION_MAP[method_name]))
/usr/local/lib/python3.7/dist-packages/paddle/fluid/layers/math_op_patch.py:298: UserWarning: /usr/local/lib/python3.7/dist-packages/paddle/nn/layer/transformer.py:527
The behavior of expression A + B has been unified with elementwise_add(X, Y, axis=-1) from Paddle 2.0. If your code works well in the older versions but crashes in this version, try to use elementwise_add(X, Y, axis=0) instead of A + B. This transitional warning will be dropped in the future.
  op_type, op_type, EXPRESSION_MAP[method_name]))
/usr/local/lib/python3.7/dist-packages/paddle/fluid/layers/math_op_patch.py:298: UserWarning: /usr/local/lib/python3.7/dist-packages/paddle/nn/layer/transformer.py:535
The behavior of expression A + B has been unified with elementwise_add(X, Y, axis=-1) from Paddle 2.0. If your code works well in the older versions but crashes in this version, try to use elementwise_add(X, Y, axis=0) instead of A + B. This transitional warning will be dropped in the future.
  op_type, op_type, EXPRESSION_MAP[method_name]))
/usr/local/lib/python3.7/dist-packages/paddle/fluid/layers/math_op_patch.py:298: UserWarning: /workspace/models/PaddleNLP/paddlenlp/transformers/bert/modeling.py:501
The behavior of expression A / B has been unified with elementwise_div(X, Y, axis=-1) from Paddle 2.0. If your code works well in the older versions but crashes in this version, try to use elementwise_div(X, Y, axis=0) instead of A / B. This transitional warning will be dropped in the future.
  op_type, op_type, EXPRESSION_MAP[method_name]))
global step 20, epoch: 0, batch: 19, loss: 11.209243, speed: 1.91 step/s, ips: 245.06 sequences/s
global step 40, epoch: 0, batch: 39, loss: 11.054677, speed: 4.29 step/s, ips: 548.82 sequences/s
global step 60, epoch: 0, batch: 59, loss: 10.928607, speed: 4.29 step/s, ips: 548.83 sequences/s
global step 80, epoch: 0, batch: 79, loss: 10.728730, speed: 4.29 step/s, ips: 548.54 sequences/s
global step 100, epoch: 0, batch: 99, loss: 10.524716, speed: 4.28 step/s, ips: 548.48 sequences/s
global step 120, epoch: 0, batch: 119, loss: 10.308754, speed: 4.28 step/s, ips: 548.32 sequences/s
global step 140, epoch: 0, batch: 139, loss: 10.342618, speed: 4.28 step/s, ips: 548.26 sequences/s
global step 160, epoch: 0, batch: 159, loss: 10.110089, speed: 4.29 step/s, ips: 548.50 sequences/s
global step 180, epoch: 0, batch: 179, loss: 9.989026, speed: 4.28 step/s, ips: 548.12 sequences/s
global step 200, epoch: 0, batch: 199, loss: 9.924275, speed: 4.28 step/s, ips: 547.95 sequences/s
global step 220, epoch: 0, batch: 219, loss: 9.954334, speed: 4.28 step/s, ips: 547.66 sequences/s
global step 240, epoch: 0, batch: 239, loss: 9.819057, speed: 4.28 step/s, ips: 547.56 sequences/s
global step 260, epoch: 0, batch: 259, loss: 9.729109, speed: 4.28 step/s, ips: 547.50 sequences/s
global step 280, epoch: 0, batch: 279, loss: 9.690248, speed: 4.28 step/s, ips: 547.88 sequences/s
global step 300, epoch: 0, batch: 299, loss: 9.608244, speed: 4.28 step/s, ips: 547.61 sequences/s
global step 320, epoch: 0, batch: 319, loss: 9.684352, speed: 4.28 step/s, ips: 547.37 sequences/s
global step 340, epoch: 0, batch: 339, loss: 9.664596, speed: 4.27 step/s, ips: 547.00 sequences/s
global step 360, epoch: 0, batch: 359, loss: 9.649623, speed: 4.28 step/s, ips: 547.34 sequences/s
global step 380, epoch: 0, batch: 379, loss: 9.565781, speed: 4.28 step/s, ips: 547.49 sequences/s
global step 400, epoch: 0, batch: 399, loss: 9.577192, speed: 4.27 step/s, ips: 547.09 sequences/s
global step 420, epoch: 0, batch: 419, loss: 9.477442, speed: 4.27 step/s, ips: 547.06 sequences/s
global step 440, epoch: 0, batch: 439, loss: 9.411667, speed: 4.27 step/s, ips: 547.06 sequences/s
global step 460, epoch: 0, batch: 459, loss: 9.327458, speed: 4.27 step/s, ips: 546.97 sequences/s
global step 480, epoch: 0, batch: 479, loss: 9.368496, speed: 4.27 step/s, ips: 546.79 sequences/s
global step 500, epoch: 0, batch: 499, loss: 9.246384, speed: 4.27 step/s, ips: 547.01 sequences/s
