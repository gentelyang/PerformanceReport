[32m[2020-12-14 15:46:34,645] [    INFO][0m - Found /root/.paddlenlp/models/bert-base-uncased/bert-base-uncased-vocab.txt[0m
W1214 15:46:38.768363  1916 device_context.cc:320] Please NOTE: device: 0, GPU Compute Capability: 7.0, Driver API Version: 11.0, Runtime API Version: 10.1
W1214 15:46:38.773319  1916 device_context.cc:330] device: 0, cuDNN Version: 7.6.
/usr/local/lib/python3.7/dist-packages/paddle/fluid/layers/math_op_patch.py:298: UserWarning: /workspace/models/PaddleNLP/paddlenlp/transformers/bert/modeling.py:58
The behavior of expression A - B has been unified with elementwise_sub(X, Y, axis=-1) from Paddle 2.0. If your code works well in the older versions but crashes in this version, try to use elementwise_sub(X, Y, axis=0) instead of A - B. This transitional warning will be dropped in the future.
  op_type, op_type, EXPRESSION_MAP[method_name]))
/usr/local/lib/python3.7/dist-packages/paddle/fluid/layers/math_op_patch.py:298: UserWarning: /workspace/models/PaddleNLP/paddlenlp/transformers/bert/modeling.py:67
The behavior of expression A + B has been unified with elementwise_add(X, Y, axis=-1) from Paddle 2.0. If your code works well in the older versions but crashes in this version, try to use elementwise_add(X, Y, axis=0) instead of A + B. This transitional warning will be dropped in the future.
  op_type, op_type, EXPRESSION_MAP[method_name]))
/usr/local/lib/python3.7/dist-packages/paddle/fluid/layers/math_op_patch.py:298: UserWarning: /usr/local/lib/python3.7/dist-packages/paddle/nn/layer/transformer.py:378
The behavior of expression A + B has been unified with elementwise_add(X, Y, axis=-1) from Paddle 2.0. If your code works well in the older versions but crashes in this version, try to use elementwise_add(X, Y, axis=0) instead of A + B. This transitional warning will be dropped in the future.
  op_type, op_type, EXPRESSION_MAP[method_name]))
/usr/local/lib/python3.7/dist-packages/paddle/fluid/layers/math_op_patch.py:298: UserWarning: /usr/local/lib/python3.7/dist-packages/paddle/nn/layer/transformer.py:527
The behavior of expression A + B has been unified with elementwise_add(X, Y, axis=-1) from Paddle 2.0. If your code works well in the older versions but crashes in this version, try to use elementwise_add(X, Y, axis=0) instead of A + B. This transitional warning will be dropped in the future.
  op_type, op_type, EXPRESSION_MAP[method_name]))
/usr/local/lib/python3.7/dist-packages/paddle/fluid/layers/math_op_patch.py:298: UserWarning: /usr/local/lib/python3.7/dist-packages/paddle/nn/layer/transformer.py:535
The behavior of expression A + B has been unified with elementwise_add(X, Y, axis=-1) from Paddle 2.0. If your code works well in the older versions but crashes in this version, try to use elementwise_add(X, Y, axis=0) instead of A + B. This transitional warning will be dropped in the future.
  op_type, op_type, EXPRESSION_MAP[method_name]))
/usr/local/lib/python3.7/dist-packages/paddle/fluid/layers/math_op_patch.py:298: UserWarning: /workspace/models/PaddleNLP/paddlenlp/transformers/bert/modeling.py:501
The behavior of expression A / B has been unified with elementwise_div(X, Y, axis=-1) from Paddle 2.0. If your code works well in the older versions but crashes in this version, try to use elementwise_div(X, Y, axis=0) instead of A / B. This transitional warning will be dropped in the future.
  op_type, op_type, EXPRESSION_MAP[method_name]))
global step 20, epoch: 0, batch: 19, loss: 11.193515, speed: 2.38 step/s, ips: 152.44 sequences/s
global step 40, epoch: 0, batch: 39, loss: 11.095941, speed: 7.33 step/s, ips: 468.84 sequences/s
global step 60, epoch: 0, batch: 59, loss: 10.978405, speed: 7.32 step/s, ips: 468.18 sequences/s
global step 80, epoch: 0, batch: 79, loss: 10.710381, speed: 7.31 step/s, ips: 468.02 sequences/s
global step 100, epoch: 0, batch: 99, loss: 10.575435, speed: 7.32 step/s, ips: 468.51 sequences/s
global step 120, epoch: 0, batch: 119, loss: 10.400787, speed: 7.31 step/s, ips: 467.86 sequences/s
global step 140, epoch: 0, batch: 139, loss: 10.277389, speed: 7.31 step/s, ips: 468.12 sequences/s
global step 160, epoch: 0, batch: 159, loss: 10.101267, speed: 7.30 step/s, ips: 467.15 sequences/s
global step 180, epoch: 0, batch: 179, loss: 10.151067, speed: 7.33 step/s, ips: 469.04 sequences/s
global step 200, epoch: 0, batch: 199, loss: 10.009148, speed: 7.32 step/s, ips: 468.63 sequences/s
global step 220, epoch: 0, batch: 219, loss: 9.935417, speed: 7.32 step/s, ips: 468.20 sequences/s
global step 240, epoch: 0, batch: 239, loss: 9.790760, speed: 7.31 step/s, ips: 468.08 sequences/s
global step 260, epoch: 0, batch: 259, loss: 9.604862, speed: 7.32 step/s, ips: 468.62 sequences/s
global step 280, epoch: 0, batch: 279, loss: 9.898273, speed: 7.31 step/s, ips: 467.84 sequences/s
global step 300, epoch: 0, batch: 299, loss: 9.822138, speed: 7.32 step/s, ips: 468.52 sequences/s
global step 320, epoch: 0, batch: 319, loss: 9.621010, speed: 7.33 step/s, ips: 468.91 sequences/s
global step 340, epoch: 0, batch: 339, loss: 9.652740, speed: 7.33 step/s, ips: 468.90 sequences/s
global step 360, epoch: 0, batch: 359, loss: 9.449191, speed: 7.31 step/s, ips: 467.92 sequences/s
global step 380, epoch: 0, batch: 379, loss: 9.676030, speed: 7.32 step/s, ips: 468.72 sequences/s
global step 400, epoch: 0, batch: 399, loss: 9.446019, speed: 7.32 step/s, ips: 468.26 sequences/s
global step 420, epoch: 0, batch: 419, loss: 9.453219, speed: 7.31 step/s, ips: 467.96 sequences/s
global step 440, epoch: 0, batch: 439, loss: 9.436239, speed: 7.33 step/s, ips: 468.89 sequences/s
global step 460, epoch: 0, batch: 459, loss: 9.254897, speed: 7.32 step/s, ips: 468.33 sequences/s
global step 480, epoch: 0, batch: 479, loss: 9.277801, speed: 7.32 step/s, ips: 468.37 sequences/s
global step 500, epoch: 0, batch: 499, loss: 9.349097, speed: 7.31 step/s, ips: 468.11 sequences/s
